!function(t){function e(e){for(var o,s,a=e[0],c=e[1],u=e[2],l=0,p=[];l<a.length;l++)s=a[l],Object.prototype.hasOwnProperty.call(r,s)&&r[s]&&p.push(r[s][0]),r[s]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(t[o]=c[o]);for(h&&h(e);p.length;)p.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var t,e=0;e<i.length;e++){for(var n=i[e],o=!0,a=1;a<n.length;a++){var c=n[a];0!==r[c]&&(o=!1)}o&&(i.splice(e--,1),t=s(s.s=n[0]))}return t}var o={},r={0:0},i=[];function s(e){if(o[e])return o[e].exports;var n=o[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=o,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(n,o,function(e){return t[e]}.bind(null,o));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="";var a=window.webpackJsonp=window.webpackJsonp||[],c=a.push.bind(a);a.push=e,a=a.slice();for(var u=0;u<a.length;u++)e(a[u]);var h=c;i.push([534,1]),n()}({1455:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1456),r=n(1458),i=n(1459);e.default=[r.BootScene,o.MainMenuScene,i.GameScene]},1456:function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1457),s={active:!1,visible:!1,key:"MainMenu"},a=function(t){function e(){return t.call(this,s)||this}return r(e,t),e.prototype.create=function(){var t=this;this.add.text(100,50,'This is a sample main menu. Click the "Start" button below to run your game.',{fill:"#FFFFFF"}).setFontSize(24),new i.MenuButton(this,100,150,"Start Game",(function(){t.scene.start("Game")})),new i.MenuButton(this,100,250,"Settings",(function(){return console.log("settings button clicked")})),new i.MenuButton(this,100,350,"Help",(function(){return console.log("help button clicked")}))},e}(Phaser.Scene);e.MainMenuScene=a},1457:function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(155),s=10,a=200,c=50,u=function(t){function e(e,n,o,r,i){var u=t.call(this,e,n,o)||this;e.add.existing(u),u.setOrigin(0,0),u.label=e.add.text(n+s,o+s,r).setFontSize(18).setAlign("center");var h=u.label.width+s,l=u.label.height+s;return u.width=h>=a?h:a,u.height=l>=c?l:c,u.setInteractive({useHandCursor:!0}).on("pointerover",u.enterMenuButtonHoverState).on("pointerout",u.enterMenuButtonRestState).on("pointerdown",u.enterMenuButtonActiveState).on("pointerup",u.enterMenuButtonHoverState),i&&u.on("pointerup",i),u.enterMenuButtonRestState(),u}return r(e,t),e.prototype.enterMenuButtonHoverState=function(){this.label.setColor("#000000"),this.setFillStyle(8947848)},e.prototype.enterMenuButtonRestState=function(){this.label.setColor("#FFFFFF"),this.setFillStyle(8947848)},e.prototype.enterMenuButtonActiveState=function(){this.label.setColor("#BBBBBB"),this.setFillStyle(4473924)},e}(i.GameObjects.Rectangle);e.MenuButton=u},1458:function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(258),s={active:!1,visible:!1,key:"Boot"},a=function(t){function e(){return t.call(this,s)||this}return r(e,t),e.prototype.preload=function(){var t=this,e=.5*i.getGameWidth(this),n=.5*i.getGameHeight(this),o=this.add.rectangle(e,n,400,100,0),r=this.add.rectangle(e+20-.5*o.width,n,10,80,8947848),s=this.add.text(e-75,n-100,"Loading...").setFontSize(24),a=this.add.text(e-25,n,"0%").setFontSize(24),c=this.add.text(e-25,n+100,"").setFontSize(24);this.load.on("progress",(function(t){r.width=370*t;var e=100*t;a.setText(e+"%")})),this.load.on("fileprogress",(function(t){c.setText(t.key)})),this.load.on("complete",(function(){s.destroy(),a.destroy(),c.destroy(),r.destroy(),o.destroy(),t.scene.start("MainMenu")})),this.loadAssets()},e.prototype.loadAssets=function(){this.load.image("man","src/assets/character.png"),this.load.image("background","src/assets/desert_sand2_s.jpg"),this.load.image("bomb","src/assets/bombs.png")},e}(Phaser.Scene);e.BootScene=a},1459:function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(258),s=n(1460),a=n(1461),c={active:!1,visible:!1,key:"Game"},u=function(t){function e(){return t.call(this,c)||this}return r(e,t),e.prototype.init=function(){this.score=0,this.lives=50},e.prototype.create=function(){this.add.image(400,400,"background"),this.scoreText=this.add.text(i.getGameWidth(this)-100,10,"Score: "+this.score),this.livesText=this.add.text(10,10,"Lives left: "+this.lives),this.character=new s.Character({scene:this,x:20,y:i.getGameHeight(this)-50,key:"man"}),this.bombs=this.add.group({classType:a.Bomb,runChildUpdate:!0}),this.physics.world.setBounds(0,0,i.getGameWidth(this),i.getGameHeight(this)),this.scoreEvent=this.time.addEvent({delay:1e3,callback:this.dropBombs,callbackScope:this,loop:!0}),this.livesEvent=this.events,this.livesEvent.addListener("missedBomb",this.missedBomb,this),this.physics.add.collider(this.bombs,this.character,this.onhitbomb,null,this)},e.prototype.update=function(){this.character.update(),this.lives<=0&&this.showGameOver()},e.prototype.dropBombs=function(){this.createBomb()},e.prototype.createBomb=function(){this.bombs.add(new a.Bomb({scene:this,x:Phaser.Math.Between(0,i.getGameWidth(this)-32),y:0,key:"bomb"}))},e.prototype.onhitbomb=function(t,e){t.destroy(),this.score++,this.scoreText.setText("Score: "+this.score)},e.prototype.missedBomb=function(){this.lives--,this.livesText.setText("Lives left: "+this.lives)},e.prototype.showGameOver=function(){this.add.text(.5*i.getGameWidth(this)-100,.5*i.getGameHeight(this),"GAME OVER",{fontSize:30}),this.physics.shutdown(),this.scoreEvent.destroy(),this.livesEvent.removeListener("missedBomb"),this.time.addEvent({delay:8e3,callback:this.gameRestart,callbackScope:this,loop:!1})},e.prototype.gameRestart=function(){this.scene.restart()},e}(Phaser.Scene);e.GameScene=u},1460:function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(e){var n=t.call(this,e.scene,e.x,e.y,e.key,e.frame)||this;return n.speed=200,n.setOrigin(0,0),n.scene.physics.world.enable(n),n.body.setGravityY(1e4),n.body.setCollideWorldBounds(!0),n.cursorKeys=n.scene.input.keyboard.createCursorKeys(),n.scene.add.existing(n),n}return r(e,t),e.prototype.update=function(){var t=new Phaser.Math.Vector2(0,0);this.cursorKeys.left.isDown&&(t.x-=1),this.cursorKeys.right.isDown&&(t.x+=1);var e=t.normalize();this.body.setVelocity(e.x*this.speed,e.y*this.speed)},e}(Phaser.GameObjects.Sprite);e.Character=i},1461:function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(258),s=function(t){function e(e){var n=t.call(this,e.scene,e.x,e.y,e.key,e.frame)||this;return n.gravity=100,n.setOrigin(0,0),n.scene.physics.world.enable(n),n.body.setGravityY(150),n.missedBomb=n.scene.events,n.scene.add.existing(n),n}return r(e,t),e.prototype.update=function(){this.y>i.getGameHeight(this.scene)&&(this.missedBomb.emit("missedBomb"),this.destroy())},e}(Phaser.GameObjects.Sprite);e.Bomb=s},258:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getGameWidth=function(t){return t.game.scale.width},e.getGameHeight=function(t){return t.game.scale.height}},534:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(155),r=n(1455),i={title:"Sample",type:o.AUTO,scale:{width:800,height:600},scene:r.default,physics:{default:"arcade",arcade:{debug:!1,gravity:{x:0,y:5}}},render:{pixelArt:!0},parent:"content",backgroundColor:"#000000"};e.game=new o.Game(i),window.addEventListener("resize",(function(){e.game.scale.refresh()}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,